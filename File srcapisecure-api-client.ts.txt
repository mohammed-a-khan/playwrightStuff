package com.yourcompany.steps.api;

import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.qmetry.qaf.automation.core.TestBaseProvider;
import com.qmetry.qaf.automation.step.QAFTestStep;
import com.qmetry.qaf.automation.util.Reporter;
import com.yourcompany.api.core.BaseAPIEndpoint;
import com.yourcompany.api.core.GenericRestClient.ApiResponse;
import com.yourcompany.api.endpoints.AssetLayoutEndpoint;

/**
 * BDD step definitions for the Asset Layout API tests.
 * Extends BaseAPISteps to inherit common step definitions.
 */
public class AssetLayoutSteps extends BaseAPISteps {
    
    private static final Log logger = LogFactory.getLog(AssetLayoutSteps.class);
    private AssetLayoutEndpoint endpoint = new AssetLayoutEndpoint();
    
    @Override
    protected BaseAPIEndpoint getEndpoint() {
        return endpoint;
    }
    
    /**
     * Executes a request to the Asset Layout API using the current test data.
     */
    @QAFTestStep(description = "I send a request to the asset layout API")
    public void iSendRequestToAssetLayoutAPI() {
        Map<String, Object> testData = TestBaseProvider.instance().get().getContext().getTestData();
        
        try {
            logger.info("Sending asset layout API request with data: " + testData);
            ApiResponse response = endpoint.executeRequest(testData);
            
            Reporter.log("Request sent successfully.");
            Reporter.log("Response status: " + endpoint.getStatusCode());
            Reporter.log("Response body: " + endpoint.getResponseBody());
            
        } catch (Exception e) {
            Reporter.log("Error sending request: " + e.getMessage());
            throw e;
        }
    }
}
