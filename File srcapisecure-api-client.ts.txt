import javax.net.ssl.*;
import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.KeyStore;

public class HttpUtil {

    public static String postWithPfxCert(String url, String payload, String pfxPath, String pfxPassword) {
        try {
            // Load KeyStore from PFX
            KeyStore keyStore = KeyStore.getInstance("PKCS12");
            try (InputStream keyStoreStream = new FileInputStream(pfxPath)) {
                keyStore.load(keyStoreStream, pfxPassword.toCharArray());
            }

            // KeyManager for client cert
            KeyManagerFactory kmf = KeyManagerFactory.getInstance("SunX509");
            kmf.init(keyStore, pfxPassword.toCharArray());

            // TrustManager (trust the same store or all)
            TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
            tmf.init(keyStore);

            // SSL context setup
            SSLContext sslContext = SSLContext.getInstance("TLS");
            sslContext.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);

            // Set custom SSL socket factory
            HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());

            // Create connection
            URL endpointUrl = new URL(url);
            HttpsURLConnection conn = (HttpsURLConnection) endpointUrl.openConnection();
            conn.setRequestMethod("POST");
            conn.setRequestProperty("Content-Type", "application/json");
            conn.setDoOutput(true);

            // Write request body
            try (OutputStream os = conn.getOutputStream()) {
                os.write(payload.getBytes("UTF-8"));
            }

            // Read response
            int statusCode = conn.getResponseCode();
            InputStream is = (statusCode >= 200 && statusCode < 300)
                    ? conn.getInputStream() : conn.getErrorStream();

            StringBuilder response = new StringBuilder();
            try (BufferedReader in = new BufferedReader(new InputStreamReader(is))) {
                String line;
                while ((line = in.readLine()) != null) {
                    response.append(line);
                }
            }

            return "Status: " + statusCode + "\nResponse: " + response;

        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
    }
}
