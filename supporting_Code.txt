// File: src/support/test-context.ts

import { Page, BrowserContext } from '@playwright/test';
import { AxiosResponse } from 'axios';
import { Logger } from '../framework/utils/logger';
import { LoginPage } from '../pages/login-page';
import { DashboardPage } from '../pages/dashboard-page';
import { UserProfilePage } from '../pages/user-profile-page';
import { UserApiClient } from '../api/user-api-client';
import { ProductApiClient } from '../api/product-api-client';

/**
 * Comprehensive test context that can be used for both UI and API tests
 * Shared between steps to maintain state
 */
export interface TestContext {
  // Playwright objects
  page: Page;
  context: BrowserContext;
  
  // Logger instance
  logger: Logger;
  
  // UI Page Objects
  loginPage?: LoginPage;
  dashboardPage?: DashboardPage;
  userProfilePage?: UserProfilePage;
  
  // API Clients
  userApiClient?: UserApiClient;
  productApiClient?: ProductApiClient;
  
  // API testing properties
  authToken?: string;
  response?: AxiosResponse;
  
  // Common properties
  testData: Record<string, any>; // For storing data between steps
  scenarioName?: string;
  scenarioTags?: string[];
  result?: { status: string }; // For tracking test result status
  
  // Test execution metadata
  startTime?: number;
  endTime?: number;
  
  // Cucumber attachment function
  attach: (data: any, mimeType: string) => void;
}

// For type compatibility with existing step definitions
export interface ApiContext extends TestContext {}
